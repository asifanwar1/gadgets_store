import React, {useState, useEffect} from 'react'
import Head from 'next/head'
import { useRouter } from "next/router";
import Link from 'next/link'
import axios from 'axios';
import { signOut, useSession } from "next-auth/react"
import Card from '@mui/material/Card';
import CardActions from '@mui/material/CardActions';
import CardContent from '@mui/material/CardContent';
import CardMedia from '@mui/material/CardMedia';
import Button from '@mui/material/Button';
import ButtonGroup from '@mui/material/ButtonGroup';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import Modal from '@mui/material/Modal';
import Grid from '@mui/material/Grid';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemText from '@mui/material/ListItemText';
import ListItemAvatar from '@mui/material/ListItemAvatar';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import Fab from '@mui/material/Fab';
import Avatar from '@mui/material/Avatar';
import Divider from '@mui/material/Divider';
import DeleteIcon from '@mui/icons-material/Delete';
import AddIcon from '@mui/icons-material/Add';
import RemoveIcon from '@mui/icons-material/Remove';
import ShoppingCartCheckoutIcon from '@mui/icons-material/ShoppingCartCheckout';
import InputLabel from '@mui/material/InputLabel';
import FormControl from '@mui/material/FormControl';
import NativeSelect from '@mui/material/NativeSelect';
import DashDrawer from 'components/DashDrawer';
import MainNavbar from 'components/MainNavbar';


const Inventory = ({products}) => {

    const { data: session, status } = useSession();
    const user = session?.user;
    console.log(user)

  console.log(products)
  const [pageName, setPageName] = useState(" / Inventory");
  const [allItems, setAllItems] = useState(products);

  const handleDeleteItem = async (itemId) =>{
    console.log(itemId)
    
    if(itemId){
      const newList = allItems.filter(element => {
        return element.id !== itemId;
      })
      setAllItems(newList)

      try {
        const res = await axios.post('/api/deleteProduct', {itemId});
        if(res.status === 200){
          console.log("cart updated");
        }
      } catch (err) {
        console.log(err);
      }
    }

  }
  

  if(user && user.role === "admin"){
    return (
      <>
        <Head>
          <title>Dashboard</title> 
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/logo.png" />
        </Head>
        <DashDrawer props={pageName}/>
        <Box sx={{mt: 2,}}>
          {products ?
            <Box>
              <TableContainer >
                <Table sx={{ minWidth: 650, filter: 'drop-shadow(2px 2px 2px rgba(0,0,0,0.63))' }} aria-label="simple table">
                  <TableHead>
                    <TableRow>
                      <TableCell>Product</TableCell>
                      <TableCell align="right">Category</TableCell>
                      <TableCell align="right">Price&nbsp;($)</TableCell>
                      <TableCell align="right">Available Qty</TableCell>
                      <TableCell align="right">Delete</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {products.map((element, index) =>
                      <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>
                        <TableCell component="th" scope="row">
                          <Avatar alt="Product" src={element.attributes.imageUrl} />
                          {element.attributes.title}
                        </TableCell>
                        <TableCell align="right">{element.attributes.category}</TableCell>
                        <TableCell align="right">{'$ '+element.attributes.price}</TableCell>
                        <TableCell align="right">{element.attributes.availableQty}</TableCell>
                        <TableCell align="right"><DeleteIcon onClick={() => handleDeleteItem(element.id)} sx={{color: '#7b54bf', cursor: 'pointer' ,'&:hover': {color : '#9256fa'},}}/></TableCell>
                      </TableRow>
                    )}
                  </TableBody>
                </Table>
              </TableContainer> 
              
            </Box>
          :
            <TableContainer></TableContainer>  
          }
      </Box>
  
      </>
    )

  }


  return(
    <>
        <Head>
            <title>Gadgets Galore</title> 
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/logo.png" />
        </Head>
        <section>
            <MainNavbar/>
        </section>
        <section>
            <Box sx={{textAlign: 'center', mt: '5%' }}>
                <Typography variant="h5" gutterBottom >
                    Please <Link href='/Login' className='listItem'>SignIn</Link> or <Link href='/Register' className='listItem'>Create</Link> an account
                    to continue.
                </Typography>
            </Box>
        </section>
    </>
  )
}


import { authOptions } from '../api/auth/[...nextauth]'
import { getServerSession } from "next-auth/next"

export async function getServerSideProps({ req, res }){
  const session = await getServerSession(req, res, authOptions);

  if(session){
    const {API_URL} = process.env;
  
    const res = await axios.get(`${API_URL}/api/products`);
    
    
    const data = await res.data;
    
  
    return {
      props: {
        products: data.data
      },
    }

  }
  else{
    return {
      props: {
        // cartItems: userCart
      },
    }
  }
}

export default Inventory