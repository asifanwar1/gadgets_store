import React, {useState, useEffect} from 'react'
import Head from 'next/head'
import Image from 'next/image'
import axios from 'axios';
import { signOut, useSession } from "next-auth/react"
import Card from '@mui/material/Card';
import CardActions from '@mui/material/CardActions';
import CardContent from '@mui/material/CardContent';
import CardMedia from '@mui/material/CardMedia';
import Typography from '@mui/material/Typography';
import Fab from '@mui/material/Fab';
import Box from '@mui/material/Box';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Grid from '@mui/material/Grid';
import InfoIcon from '@mui/icons-material/Info';
import Avatar from '@mui/material/Avatar';
import WhatsAppIcon from '@mui/icons-material/WhatsApp';
import DeleteIcon from '@mui/icons-material/Delete';
import EmailIcon from '@mui/icons-material/Email';
import YouTubeIcon from '@mui/icons-material/YouTube'; 
import FacebookIcon from '@mui/icons-material/Facebook';
import TwitterIcon from '@mui/icons-material/Twitter';
import BlockIcon from '@mui/icons-material/Block';
import DashDrawer from 'components/DashDrawer';
import MainNavbar from 'components/MainNavbar';
import Link from 'next/link'

const AllOrders = ({orders}) => {

    const { data: session, status } = useSession();
    const user = session?.user;
    console.log(orders)

    const [pageName, setPageName] = useState(" / Orders");

    if(user && user.role === "admin"){
      return (
      <>
        <Head> 
          <title>Dashboard</title> 
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/logo.png" />
        </Head>
        <DashDrawer props={pageName}/>
        <Box sx={{mt: 2,}}>
          {orders ?
            <Box>
              <TableContainer >
                <Table sx={{ minWidth: 650, filter: 'drop-shadow(2px 2px 2px rgba(0,0,0,0.63))' }} aria-label="simple table">
                  <TableHead>
                    <TableRow>
                      <TableCell>Product</TableCell>
                      <TableCell align="right">Quantity</TableCell>
                      <TableCell align="right">User</TableCell>
                      <TableCell align="right">Address</TableCell>
                      <TableCell align="right">Phone</TableCell>
                      <TableCell align="right">Notes</TableCell>
                      <TableCell align="right">Payment Status</TableCell>
                      <TableCell align="right">Delivery Status</TableCell>
                      <TableCell align="right">Date</TableCell>
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {orders.map((element, index) =>
                      <TableRow key={index} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>
                        <TableCell component="th" scope="row">
                          <Avatar alt="Product" src={element.attributes.product.data.attributes.imageUrl} />
                          {element.attributes.product.data.attributes.title}
                        </TableCell>
                        <TableCell align="right">{element.attributes.quantity}</TableCell>
                        <TableCell align="right">
                          ID: {element.attributes.user.data.id} -- 
                          {element.attributes.user.data.attributes.username}
                        </TableCell>
                        <TableCell align="right">{element.attributes.address}</TableCell>
                        <TableCell align="right">{element.attributes.phone}</TableCell>
                        <TableCell align="right">{element.attributes.orderNotes}</TableCell>
                        <TableCell align="right">{element.attributes.status}</TableCell>
                        <TableCell align="right">Pending</TableCell>
                        <TableCell align="right">{element.attributes.createdAt}</TableCell>
                      </TableRow>
                    )}
                  </TableBody>
                </Table>
              </TableContainer> 
              
            </Box>
          :
            <TableContainer></TableContainer>  
          }
      </Box>
      </>
      )

    }

    return(
      <>
          <Head>
              <title>Gadgets Galore</title> 
              <meta name="description" content="Generated by create next app" />
              <meta name="viewport" content="width=device-width, initial-scale=1" />
              <link rel="icon" href="/logo.png" />
          </Head>
          <section>
              <MainNavbar/>
          </section>
          <section>
              <Box sx={{textAlign: 'center', mt: '5%' }}>
                  <Typography variant="h5" gutterBottom >
                      Please <Link href='/Login' className='listItem'>SignIn</Link> or <Link href='/Register' className='listItem'>Create</Link> an account
                      to continue.
                  </Typography>
              </Box>
          </section>
      </>
    )
}





import { authOptions } from '../api/auth/[...nextauth]'
import { getServerSession } from "next-auth/next"

export async function getServerSideProps({ req, res }){
  const session = await getServerSession(req, res, authOptions);

  if(session){

    // const response = await axios.get(`${process.env.API_URL}/api/revenues?populate=product&populate=order`, {
    const response = await axios.get(`${process.env.API_URL}/api/orders?populate=product&populate=user`, {
      headers: {
          // Authorization: `Bearer ${process.env.ADMIN_TOKEN}`
          Authorization: `Bearer ${session.user.jwtoken}`
      }
    });
    
    
    const data = await response.data;
    
  
    return {
      props: {
        orders: data.data
      },
    }

  }
  else{
    return {
      props: {
        // cartItems: userCart
      },
    }
  }
}




export default AllOrders